@model PROG_2B_POE_Final_Part_ST10438307_Daniel_Gorin.Models.Claims

<div class="text-center">
    <button class="btn btn-secondary mt-3" onclick="location.href='/Home/Admin'">Return</button>
    <h1 class="display-4">Claim Details</h1>
    <p><strong>Claim ID:</strong> @Model.ClaimId</p>
    <p><strong>Claimant Name:</strong> @Model.ClaimantName</p>
    <p><strong>Hours Worked:</strong> @Model.HoursWorked</p>
    <p><strong>Hourly Rate: R</strong>@Model.HourlyRate</p>
    <p><strong>Total R:</strong>@(Model.HoursWorked * Model.HourlyRate)</p>
    <p>
        <strong>Status:</strong>
        <span style="@((Model.Status == "Approved") ? "color: lime;"
                          : (Model.Status == "Denied") ? "color: #ff3333;"
                          : "text-decoration: underline;")">
            @Model.Status
        </span>
    </p>
    <p><strong>Comments:</strong> @Model.ClaimantComments</p>

    <!-- Accept and Deny Buttons -->
    @if (Model.Status == "Pending")
    {
        <div class="mt-4">
            <button class="btn btn-success"
                    onclick="location.href='/Home/ApproveClaim?claimId=@Model.ClaimId'">
                Approve
            </button>
            <button class="btn btn-danger"
                    onclick="location.href='/Home/DenyClaim?claimId=@Model.ClaimId'">
                Deny
            </button>
        </div>
    }


    <!-- Evaluate Claim Button -->
    <div class="mt-4">
        <button id="evaluateButton" class="btn btn-warning" onclick="toggleEvaluation()">Show Evaluation</button>
    </div>

    <!-- Evaluation Recommendation -->
    <div id="evaluationRecommendation" class="mt-3 text-left" style="display: none;">
        <strong id="recommendationText"></strong>
    </div>

    <!-- Evaluation Result -->
    <div id="evaluationResult" class="mt-3 text-left" style="display: none;">
        <strong id="evaluationText"></strong>
    </div>
</div>

@section Scripts {
    <script>
        // JavaScript function to toggle the visibility of the evaluation result and recommendation
        function toggleEvaluation() {
            const resultDiv = document.getElementById("evaluationResult");
            const evaluationText = document.getElementById("evaluationText");
            const recommendationDiv = document.getElementById("evaluationRecommendation");
            const recommendationText = document.getElementById("recommendationText");
            const button = document.getElementById("evaluateButton");

            // Convert Razor variables to JavaScript variables
            const hRate = parseFloat("@Model.HourlyRate");
            const hWorked = parseInt("@Model.HoursWorked");
            const totOwed = hRate * hWorked;

            evaluationText.textContent = "";
            recommendationText.textContent = "Accept";

            if (hRate < 27.58) {
                evaluationText.textContent += `The hourly rate of R${hRate.toFixed(2)} is below minimum wage (R27.58/hour). This claim cannot be accepted. `;
                recommendationText.textContent = "Deny";
            } else if (hRate > 1000) {
                evaluationText.textContent += `The hourly rate of R${hRate.toFixed(2)} is above the maximum accepted amount (R1000/hour). This claim should not be accepted. `;
                recommendationText.textContent = "Deny";
            }

            if (totOwed < 50) {
                evaluationText.textContent += `The total cost of the claim (R${totOwed.toFixed(2)}) is below the standard minimum of R50. This claim should be denied, and the claimant should wait until the payout is an acceptable value before submitting. `;
                recommendationText.textContent = "Deny";
            } else if (totOwed > 8000) {
                evaluationText.textContent += `The total cost of the claim (R${totOwed.toFixed(2)}) is above the maximum allowed for a single claim. This claim should be denied, and the claimant should split this claim into smaller segments and submit them separately. `;
                recommendationText.textContent = "Deny";
            }

            // Toggle visibility and button text
            if (resultDiv.style.display === "none" || resultDiv.style.display === "") {
                resultDiv.style.display = "block"; // Show the text
                recommendationDiv.style.display = "block"; // Show the recommendation
                button.textContent = "Hide Evaluation"; // Change button text to "Hide Evaluation"
            } else {
                resultDiv.style.display = "none"; // Hide the text
                recommendationDiv.style.display = "none"; // Hide the recommendation
                button.textContent = "Show Evaluation"; // Change button text to "Show Evaluation"
            }
        }
    </script>
}
